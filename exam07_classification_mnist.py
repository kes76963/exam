# -*- coding: utf-8 -*-
"""exam07_classification_mnist.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Rwea7psWiAmSajbeV7ZXdTHylzPzyMEB
"""

import numpy as np
import matplotlib.pyplot as plt
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense
from tensorflow.keras.optimizers import Adam
from keras.utils import np_utils
from tensorflow.keras import datasets

(X_train, Y_train),(X_test, Y_test) = datasets.mnist.load_data()
print(X_train.shape, Y_train.shape)
print(X_test.shape, Y_test.shape)

my_sample = np.random.randint(60000)
plt.imshow(X_train[my_sample], cmap='gray')
plt.show()
print(Y_train[my_sample])
print(X_train[my_sample])

y_train = np_utils.to_categorical(Y_train)
y_test = np_utils.to_categorical(Y_test)

print(Y_train[11])
print(y_train[11])

x_train = X_train.reshape(-1, 28*28)
x_test = X_test.reshape(-1, 28*28)
x_train = x_train / 255
x_test = x_test / 255
print(x_train.shape)

model = Sequential()
model.add(Dense(128, input_dim = 784, activation='relu'))
model.add(Dense(256,activation='relu'))
model.add(Dense(10, activation='softmax')) #다중분류기

opt = Adam(lr=0.001)
model.compile(opt, loss = 'categorical_crossentropy', metrics=['accuracy'])
print(model.summary())

history = model.fit(x_train, y_train, batch_size=50, epochs=10, verbose=1)

score = model.evaluate(x_test, y_test, verbose=0)
print('Final test set accuracy :', score[1])

import matplotlib.pyplot as plt
plt.plot(history.history['accuracy'])
plt.show()

my_sample = np.random.randint(10000)
plt.imshow(X_test[my_sample])
print(Y_test[my_sample]) #예측
pred = model.predict(x_test[my_sample].reshape(-1,784))
print(pred) #확률
print(np.argmax(pred)) #맞다